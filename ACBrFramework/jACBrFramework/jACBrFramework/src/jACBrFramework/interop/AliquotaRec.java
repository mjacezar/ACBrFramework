package jACBrFramework.interop;

import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

/**
 * This file was autogenerated by <a
 * href="http://jnaerator.googlecode.com/">JNAerator</a>,<br> a tool written by
 * <a href="http://ochafik.com/">Olivier Chafik</a> that <a
 * href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few
 * opensource projects.</a>.<br> For help, please visit <a
 * href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a
 * href="http://rococoa.dev.java.net/">Rococoa</a>, or <a
 * href="http://jna.dev.java.net/">JNA</a>.
 */
public class AliquotaRec extends Structure
{
	/// C type : char[4]

	public byte[] Indice = new byte[4];
	public double Aliquota;
	public boolean Tipo;
	public double Total;
	public boolean Sequencia;

	public AliquotaRec()
	{
		super();
	}

	@Override
	protected List<String> getFieldOrder()
	{
		return Arrays.asList("Indice", "Aliquota", "Tipo", "Total", "Sequencia");
	}

	/// @param Indice C type : char[4]
	public AliquotaRec(byte Indice[], double Aliquota, boolean Tipo, double Total, boolean Sequencia)
	{
		super();
		if (Indice.length != this.Indice.length) {
			throw new IllegalArgumentException("Wrong array size !");
		}
		this.Indice = Indice;
		this.Aliquota = Aliquota;
		this.Tipo = Tipo;
		this.Total = Total;
		this.Sequencia = Sequencia;
	}

	public static class ByReference extends AliquotaRec implements Structure.ByReference
	{
	};

	public static class ByValue extends AliquotaRec implements Structure.ByValue
	{
	};
}
