package jACBrFramework.interop;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class RelatorioGerencialRec extends Structure {
	/// C type : char[4]
	public byte[] Indice = new byte[4];
	/// C type : char[30]
	public byte[] Descricao = new byte[30];
	public int Contador;
	public RelatorioGerencialRec() {
		super();
	}
	@Override
	protected List<String> getFieldOrder()
	{
	   return Arrays.asList("Indice", "Descricao", "Contador");
	}
	/**
	 * @param Indice C type : char[4]<br>
	 * @param Descricao C type : char[30]
	 */
	public RelatorioGerencialRec(byte Indice[], byte Descricao[], int Contador) {
		super();
		if (Indice.length != this.Indice.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.Indice = Indice;
		if (Descricao.length != this.Descricao.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.Descricao = Descricao;
		this.Contador = Contador;
	}
	public static class ByReference extends RelatorioGerencialRec implements Structure.ByReference {
		
	};
	public static class ByValue extends RelatorioGerencialRec implements Structure.ByValue {
		
	};
}
